generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String  @id @default(uuid())
    password String
    email    String  @unique
    username String  @unique
    image    String?
    bio      String?

    projects Project[]
    member   Membership[]
}

model Project {
    id          String       @id @default(uuid())
    title       String       @unique
    description String
    user        User         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId      String
    createdAt   DateTime     @default(now())
    boards      Board[]
    members     Membership[]
}

model Membership {
    project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    projectId String
    user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId    String
    canWrite  Boolean @default(true)
    pending   Boolean @default(true)
    admin     Boolean @default(false)

    @@id([projectId, userId])
}

model Board {
    id        String  @id @default(uuid())
    title     String
    priority  Int     @default(9999)
    project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    projectId String

    tasks Task[]
}

model Task {
    id          String @id @default(uuid())
    description String
    priority    Int    @default(9999)
    color       String
    board       Board  @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    boardId String
}
